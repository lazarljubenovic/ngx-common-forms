import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { SinDirective } from './sin.directive';
import { SinsDirective } from './sins.directive';
import { FormWithSinsDirective } from './form-with-sins.directive';
import { SIN_CONFIG, SIN_FULL_CONFIG } from './config';
export function when({ dirty, touched }) {
    return dirty && touched;
}
export const defaultConfig = {
    when,
};
export function factory(config) {
    return Object.assign({}, defaultConfig, config || {});
}
export const DIRECTIVES = [
    SinDirective,
    SinsDirective,
    FormWithSinsDirective,
];
export class SinModule {
    static forRoot(config) {
        return {
            ngModule: SinModule,
            providers: [
                {
                    provide: SIN_CONFIG,
                    useValue: config,
                },
                {
                    provide: SIN_FULL_CONFIG,
                    useFactory: factory,
                    deps: [SIN_CONFIG],
                },
            ],
        };
    }
}
SinModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                ],
                declarations: DIRECTIVES,
                exports: DIRECTIVES,
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvc2luLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQXNCLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQTtBQUMzRCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUE7QUFDNUMsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sZ0JBQWdCLENBQUE7QUFDbEQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFBO0FBQzVDLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQTtBQUM5QyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQTtBQUNoRSxPQUFPLEVBQUMsVUFBVSxFQUFFLGVBQWUsRUFBQyxNQUFNLFVBQVUsQ0FBQTtBQUVwRCxNQUFNLFVBQVUsSUFBSSxDQUFFLEVBQUMsS0FBSyxFQUFFLE9BQU8sRUFBc0I7SUFDekQsT0FBTyxLQUFLLElBQUksT0FBTyxDQUFBO0FBQ3pCLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUc7SUFDM0IsSUFBSTtDQUNMLENBQUE7QUFFRCxNQUFNLFVBQVUsT0FBTyxDQUFFLE1BQWlDO0lBQ3hELE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsYUFBYSxFQUFFLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQTtBQUN2RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHO0lBQ3hCLFlBQVk7SUFDWixhQUFhO0lBQ2IscUJBQXFCO0NBQ3RCLENBQUE7QUFVRCxNQUFNLE9BQU8sU0FBUztJQUNiLE1BQU0sQ0FBQyxPQUFPLENBQUUsTUFBaUM7UUFDdEQsT0FBTztZQUNMLFFBQVEsRUFBRSxTQUFTO1lBQ25CLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsVUFBVTtvQkFDbkIsUUFBUSxFQUFFLE1BQU07aUJBQ2pCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxlQUFlO29CQUN4QixVQUFVLEVBQUUsT0FBTztvQkFDbkIsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDO2lCQUNuQjthQUNGO1NBQ0YsQ0FBQTtJQUNILENBQUM7OztZQXhCRixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osbUJBQW1CO2lCQUNwQjtnQkFDRCxZQUFZLEVBQUUsVUFBVTtnQkFDeEIsT0FBTyxFQUFFLFVBQVU7YUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Npbk1vZHVsZUNvbmZpZywgV2hlbk9iamVjdH0gZnJvbSAnLi9pbnRlcmZhY2VzJ1xuaW1wb3J0IHtNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSdcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nXG5pbXBvcnQge1JlYWN0aXZlRm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJ1xuaW1wb3J0IHtTaW5EaXJlY3RpdmV9IGZyb20gJy4vc2luLmRpcmVjdGl2ZSdcbmltcG9ydCB7U2luc0RpcmVjdGl2ZX0gZnJvbSAnLi9zaW5zLmRpcmVjdGl2ZSdcbmltcG9ydCB7Rm9ybVdpdGhTaW5zRGlyZWN0aXZlfSBmcm9tICcuL2Zvcm0td2l0aC1zaW5zLmRpcmVjdGl2ZSdcbmltcG9ydCB7U0lOX0NPTkZJRywgU0lOX0ZVTExfQ09ORklHfSBmcm9tICcuL2NvbmZpZydcblxuZXhwb3J0IGZ1bmN0aW9uIHdoZW4gKHtkaXJ0eSwgdG91Y2hlZH06IFBhcnRpYWw8V2hlbk9iamVjdD4pOiBib29sZWFuIHtcbiAgcmV0dXJuIGRpcnR5ICYmIHRvdWNoZWRcbn1cblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRDb25maWcgPSB7XG4gIHdoZW4sXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmYWN0b3J5IChjb25maWc/OiBQYXJ0aWFsPFNpbk1vZHVsZUNvbmZpZz4pOiBTaW5Nb2R1bGVDb25maWcge1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdENvbmZpZywgY29uZmlnIHx8IHt9KVxufVxuXG5leHBvcnQgY29uc3QgRElSRUNUSVZFUyA9IFtcbiAgU2luRGlyZWN0aXZlLFxuICBTaW5zRGlyZWN0aXZlLFxuICBGb3JtV2l0aFNpbnNEaXJlY3RpdmUsXG5dXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBESVJFQ1RJVkVTLFxuICBleHBvcnRzOiBESVJFQ1RJVkVTLFxufSlcbmV4cG9ydCBjbGFzcyBTaW5Nb2R1bGUge1xuICBwdWJsaWMgc3RhdGljIGZvclJvb3QgKGNvbmZpZz86IFBhcnRpYWw8U2luTW9kdWxlQ29uZmlnPik6IE1vZHVsZVdpdGhQcm92aWRlcnM8U2luTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBTaW5Nb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFNJTl9DT05GSUcsXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFNJTl9GVUxMX0NPTkZJRyxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBmYWN0b3J5LFxuICAgICAgICAgIGRlcHM6IFtTSU5fQ09ORklHXSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfVxuICB9XG59XG4iXX0=