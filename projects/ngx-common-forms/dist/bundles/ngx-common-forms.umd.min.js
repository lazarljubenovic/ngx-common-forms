!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("rxjs"),require("@angular/common"),require("@angular/forms"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("ngx-common-forms",["exports","@angular/core","rxjs","@angular/common","@angular/forms","rxjs/operators"],r):r((t="undefined"!=typeof globalThis?globalThis:t||self)["ngx-common-forms"]={},t.ng.core,t.rxjs,t.ng.common,t.ng.forms,t.rxjs.operators)}(this,(function(t,r,o,e,n,i){"use strict";var s=new r.InjectionToken("COMMON_FORM_CONFIG"),a=new r.InjectionToken("COMMON_FORM_FULL_CONFIG"),c=new r.InjectionToken("COMMON_FORM_CONTROL"),l=new r.InjectionToken("SIN_CONFIG"),u=new r.InjectionToken("SIN_FULL_CONFIG");function f(t){return{provide:c,useExisting:r.forwardRef((function(){return t}))}}var m=function(){function t(t,r){this.renderer=t,this.elRef=r}return Object.defineProperty(t.prototype,"name",{set:function(t){this.setName(t)},enumerable:!1,configurable:!0}),t.prototype.setName=function(t){this._name=t,this.renderer.setAttribute(this.elRef.nativeElement,"name",t)},t.prototype.getName=function(){return this._name},t.prototype.focus=function(){this.elRef.nativeElement.focus()},t}();m.decorators=[{type:r.Directive,args:[{selector:"input:not([notCommonControl]),select:not([notCommonControl]),textarea:not([notCommonControl])",providers:[f(m)]}]}],m.ctorParameters=function(){return[{type:r.Renderer2},{type:r.ElementRef}]},m.propDecorators={name:[{type:r.Input}]};var p=0,h=function(){function t(t,r){this.ngControl=t,this.commonFormControl=r}return t.prototype.ngOnInit=function(){var t;if(this.commonFormControl){if(null==(t=this.commonFormControl.getName())||""==t){var r=this.ngControl.name.toString()||"common-form-control-name-"+ ++p;this.commonFormControl.setName(r)}}else console.warn('A control inside a Common Form does not provide COMMON_FORM_CONTROL token. It will be ignored. If you do not wish Common Form to be aware of this control, add [notCommonControl] selector. Path to control: "'+this.ngControl.path.join(".")+'".')},t}();h.decorators=[{type:r.Directive,args:[{selector:"[formControlName]:not([notCommonControl]),[formControl]:not([notCommonControl])"}]}],h.ctorParameters=function(){return[{type:n.NgControl,decorators:[{type:r.Self}]},{type:void 0,decorators:[{type:r.Self},{type:r.Optional},{type:r.Inject,args:[c]}]}]};var d=function(){function t(t,e){this.container=t,this.config=e,this.submit$=new o.Subject,this.isLoading=new r.EventEmitter,this.commonFormSubmit=new r.EventEmitter}return Object.defineProperty(t.prototype,"isLoading$",{get:function(){return this.isLoading.asObservable()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"commonForm",{set:function(t){this.request=t},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;null==this.propagateErrors&&(this.propagateErrors=this.config.propagateErrors),null==this.transform&&(this.transform=this.config.transform),null==this.isValidationError&&(this.isValidationError=this.config.isValidationError),null==this.transformError&&(this.transformError=this.config.transformError),null==this.request&&(this.request=this.config.request),this.container.ngSubmit.pipe(i.tap((function(r){r.preventDefault(),null!=t.preSubmit&&t.preSubmit()})),i.map((function(){return t.container.control})),i.filter((function(r){if(r.valid)return!0;var o=t.controls.map((function(t){return t.ngControl.control}));o.forEach((function(t){t.markAsDirty(),t.markAsTouched()}));var e=t.controls.find((function(t){return t.ngControl.invalid}));return null!=e&&e.commonFormControl.focus(),!1})),i.map((function(r){return t.transform(r.value)})),i.tap((function(){return t.isLoading.emit(!0)})),i.exhaustMap((function(r){return t.request(r).pipe(i.catchError((function(r){if(t.isValidationError(r)){var e=t.transformError(r),n=t.setErrors(e),i=t.controls.find((function(t){return n.indexOf(t.ngControl.control)>-1}));null!=i&&i.commonFormControl.focus()}return t.propagateErrors&&t.commonFormSubmit.emit(o.throwError(r)),o.EMPTY})),i.finalize((function(){return t.isLoading.emit(!1)})))})),i.finalize((function(){return t.isLoading.emit(!1)})),i.catchError((function(t,r){return console.error("Error while handling form submission inside Common Form",t),r}))).subscribe((function(r){t.commonFormSubmit.emit(o.of(r))}))},t.prototype.setErrors=function(t){var r=this.container.form;return Object.keys(t).forEach((function(o){null==r.get(o)?console.error("API claims that a afield with path "+o+" is invalid, but no such field was found on the form."):(!function(t,r){r.forEach((function(r){var o=t.get(r);null!=o?(o.markAsTouched(),o.markAsDirty()):console.error("Attempted to set control with name "+r+" as dirty and touched, but it was not found.")}))}(r,[o]),r.get(o).setErrors({serverError:t[o]}))})),Object.keys(t).map((function(t){return r.get(t)}))},t}();function y(t){return t}function g(t){return 422==t.status}function v(t){return t}function C(t){return o.of(t)}function b(t){return Object.assign({propagateErrors:!1,transform:y,isValidationError:g,transformError:v,request:C},t||{})}d.decorators=[{type:r.Directive,args:[{selector:"[commonForm]"}]}],d.ctorParameters=function(){return[{type:n.FormGroupDirective,decorators:[{type:r.Self}]},{type:void 0,decorators:[{type:r.Inject,args:[a]}]}]},d.propDecorators={isLoading:[{type:r.Output}],commonFormSubmit:[{type:r.Output}],propagateErrors:[{type:r.Input}],preSubmit:[{type:r.Input}],transform:[{type:r.Input}],isValidationError:[{type:r.Input}],transformError:[{type:r.Input}],request:[{type:r.Input}],commonForm:[{type:r.Input}],controls:[{type:r.ContentChildren,args:[h,{descendants:!0}]}]};var E=[d,h,m],O=function(){function t(){}return t.forRoot=function(r){return{ngModule:t,providers:[{provide:s,useValue:r},{provide:a,useFactory:b,deps:[s]}]}},t}();O.decorators=[{type:r.NgModule,args:[{imports:[e.CommonModule],declarations:E,exports:E}]}];var F=function(){function t(t){this.container=t}return t.prototype.ngOnInit=function(){this.control="string"==typeof this.nameOrControl?this.container.control.get(this.nameOrControl):this.nameOrControl},t}();F.decorators=[{type:r.Directive,args:[{selector:"[sins]"}]}],F.ctorParameters=function(){return[{type:n.ControlContainer}]},F.propDecorators={nameOrControl:[{type:r.Input,args:["sins"]}]};var w=function(){function t(t,r,e,n,i){this.templateRef=t,this.viewContainerRef=r,this.config=e,this.sinsDirective=n,this.controlContainer=i,this.visible$=new o.BehaviorSubject(null),this.initialized=!1}return Object.defineProperty(t.prototype,"control",{get:function(){return this._control},set:function(t){this._control=t,this.initialize()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"controlWithErrors",{get:function(){return this._controlWithErrors||this.control},set:function(t){this._controlWithErrors=t},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){if(this.sinsDirective)this.control=this.sinsDirective.control;else if(null!=this.name){if(null==this.controlContainer)throw new Error('You cannot register sinName "'+this.name+'" outside of a control container. You can use the sinControl input to pass in the control directly.');var t=this.controlContainer.control.get(this.name);if(null==t)throw new Error('Cannot find control "'+name+'" to bind to sin.');this.control=t}if(r.isDevMode()&&null==this.control)throw new Error("No control specified for sin.")},t.prototype.ngDoCheck=function(){this.initialized&&this.evaluate()},t.prototype.initialize=function(){null==this.when&&(this.when=this.config.when),this.initialized=!0},t.prototype.evaluate=function(){var t=this.control,r={disabled:t.disabled,dirty:t.dirty,enabled:t.enabled,invalid:t.invalid,pending:t.pending,pristine:t.pristine,touched:t.touched,untouched:t.untouched,valid:t.valid},o=this.controlWithErrors.hasError(this.error),e=this.when(r);o&&e?this.create():this.destroy()},t.prototype.create=function(){if(null==this.embeddedViewRef){this.visible$.next(this.control);var t=this.controlWithErrors.errors[this.error];this.embeddedViewRef=this.viewContainerRef.createEmbeddedView(this.templateRef,{$implicit:t})}},t.prototype.destroy=function(){null!=this.embeddedViewRef&&(this.visible$.next(null),this.embeddedViewRef.destroy(),this.embeddedViewRef=null)},t}();w.decorators=[{type:r.Directive,args:[{selector:"[sin]"}]}],w.ctorParameters=function(){return[{type:r.TemplateRef},{type:r.ViewContainerRef},{type:void 0,decorators:[{type:r.Inject,args:[u]}]},{type:F,decorators:[{type:r.Optional}]},{type:n.ControlContainer,decorators:[{type:r.Optional}]}]},w.propDecorators={error:[{type:r.Input,args:["sin"]}],control:[{type:r.Input,args:["sinControl"]}],name:[{type:r.Input,args:["sinName"]}],controlWithErrors:[{type:r.Input,args:["sinErrorFromControl"]}],when:[{type:r.Input,args:["sinWhen"]}]};Object.create;function I(t,r){var o="function"==typeof Symbol&&t[Symbol.iterator];if(!o)return t;var e,n,i=o.call(t),s=[];try{for(;(void 0===r||r-- >0)&&!(e=i.next()).done;)s.push(e.value)}catch(t){n={error:t}}finally{try{e&&!e.done&&(o=i.return)&&o.call(i)}finally{if(n)throw n.error}}return s}Object.create;function R(t){var r=I(t,2),o=r[0];return r[1].filter((function(t){return-1==o.indexOf(t)}))}var N=function(){function t(t,r,e){this.controlContainer=t,this.renderer=r,this.elementRef=e,this.destroy$=new o.Subject,this.classNameForInvalidControl="ngx-sin-invalid"}return t.prototype.markValidityFor=function(t,r){var o,e=this.formControlNames.toArray().findIndex((function(r){return t==r.control}));if(-1==e){if(this.controlContainer.control!=t)return;o=this.elementRef}else o=this.formControlElRefs.toArray()[e];r?this.renderer.addClass(o.nativeElement,this.classNameForInvalidControl):this.renderer.removeClass(o.nativeElement,this.classNameForInvalidControl)},t.prototype.markValidityForAll=function(t,r){var o=this;t.forEach((function(t){return o.markValidityFor(t,r)}))},t.prototype.markAllAsValid=function(){var t=this;this.formControlElRefs.forEach((function(r){t.renderer.removeClass(r.nativeElement,t.classNameForInvalidControl)}))},t.prototype.ngAfterContentInit=function(){var t=this;if(null!=this.sinDirectives){this.formControls=o.zip(this.formControlNames.changes.pipe(i.startWith(this.formControlNames)),this.formControlElRefs.changes.pipe(i.startWith(this.formControlElRefs))).pipe(i.map((function(t){var r=I(t,2);return{name:r[0],elRef:r[1]}})));var r=this.sinDirectives.changes.pipe(i.startWith(this.sinDirectives),i.map((function(t){return t.toArray()})),i.switchMap((function(t){return o.combineLatest(t.map((function(t){return t.visible$})))})),i.map((function(t){return t.filter((function(t){return null!=t}))})));this.formControls.pipe(i.withLatestFrom(this.sinDirectives.changes.pipe(i.startWith(this.sinDirectives)),(function(t,r){return r})),i.map((function(t){return t.toArray().map((function(t){return t.visible$.getValue()}))})),i.map((function(t){return t.filter((function(t){return null!=t}))})),i.withLatestFrom(r,(function(t,r){return r}))).subscribe((function(r){t.markAllAsValid(),t.markValidityForAll(r,!0)})),r.pipe(i.pairwise()).subscribe((function(r){var o=I(r,2),e=o[0],n=o[1],i=R([e,n]),s=function(t){var r=I(t,2),o=r[0];return R([r[1],o])}([e,n]);t.markValidityForAll(i,!0),t.markValidityForAll(s,!1)}))}},t.prototype.ngOnDestroy=function(){this.destroy$.next()},t}();function j(t){var r=t.dirty,o=t.touched;return r&&o}N.decorators=[{type:r.Directive,args:[{selector:"form"}]}],N.ctorParameters=function(){return[{type:n.ControlContainer,decorators:[{type:r.Optional},{type:r.Self}]},{type:r.Renderer2},{type:r.ElementRef}]},N.propDecorators={sinDirectives:[{type:r.ContentChildren,args:[w,{descendants:!0}]}],formControlNames:[{type:r.ContentChildren,args:[n.FormControlName,{descendants:!0}]}],formControlElRefs:[{type:r.ContentChildren,args:[n.FormControlName,{descendants:!0,read:r.ElementRef}]}]};var D={when:j};function M(t){return Object.assign({},D,t||{})}var x=[w,F,N],S=function(){function t(){}return t.forRoot=function(r){return{ngModule:t,providers:[{provide:l,useValue:r},{provide:u,useFactory:M,deps:[l]}]}},t}();S.decorators=[{type:r.NgModule,args:[{imports:[e.CommonModule,n.ReactiveFormsModule],declarations:x,exports:x}]}],t.COMMON_FORM_CONTROL=c,t.CommonFormDirective=d,t.CommonFormsModule=O,t.FormWithSinsDirective=N,t.SinDirective=w,t.SinModule=S,t.SinsDirective=F,t.ɵa=y,t.ɵb=g,t.ɵc=v,t.ɵd=C,t.ɵe=b,t.ɵf=E,t.ɵg=s,t.ɵh=a,t.ɵi=l,t.ɵj=u,t.ɵk=j,t.ɵl=D,t.ɵm=M,t.ɵn=x,t.ɵo=f,t.ɵp=m,t.ɵq=h,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-common-forms.umd.min.js.map